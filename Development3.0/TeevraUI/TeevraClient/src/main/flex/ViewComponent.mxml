<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="100%" height="100%" creationComplete="init();"
	implements="mx.rpc.IResponder">
	<mx:Script>
		<![CDATA[
			import com.headstrong.teevra.client.util.AlertHelper;
			import com.headstrong.teevra.client.events.ComponentServiceEvent;
			import com.headstrong.teevra.client.util.UIModules;
			import com.headstrong.teevra.client.graph.model.ComponentVO;
			import mx.controls.Alert;
			import com.headstrong.teevra.components.componentForm.ComponentUI;
			import mx.managers.PopUpManager;
			import mx.core.IFlexDisplayObject;
			import com.headstrong.teevra.client.model.ViewModelLocator;
			import mx.collections.ArrayCollection;
			import com.headstrong.teevra.client.util.UserEntitlements;
			[Bindable]
			private var modelLocator:ViewModelLocator = ViewModelLocator.getInstance();
			private var popup:IFlexDisplayObject;
			private var componentVO:ComponentVO
			
			private var componentServiceEvent:ComponentServiceEvent;
			private var serviceIdentifier:String;			
			private const SAVE_COMPONENT_EVENT:String = "SAVE_COMPONENT_EVENT";
			//public var modules:ArrayCollection=new ArrayCollection();
			private var userEntitlements:UserEntitlements=modelLocator.userEntitlements;
			
			private var addButtonEnabled:Boolean=true;
			
			private function authorizePage():void
			{
				if(!(userEntitlements.isAdmin || userEntitlements.createComponent))
				   {
				   		addButtonEnabled=false;				   						   		
				   }
				
			}
			
			private function init():void
			{
				authorizePage();
				addComponent.enabled=addButtonEnabled;				 
			}
			
			private function openForm():void
			{
				var configUI:ComponentUI;
				popup = PopUpManager.createPopUp(this, ComponentUI ,false);
				configUI = ComponentUI(popup);
				componentVO = new ComponentVO();
				configUI.create(popupClose,popupSave,componentVO);
	    		PopUpManager.centerPopUp(popup);
			}
			private function popupClose(event:MouseEvent):void
			{
	    		PopUpManager.removePopUp(popup);
	    	}
	    	private function popupSave():void
	   		{
	   			//09-Apr-09 AP Code Added as a part of Generalization of event :Code Start
	   			var args:Object = new Object();
				args[ComponentServiceEvent.SAVE_COMPONENT_ID] = componentVO;
				componentServiceEvent = new ComponentServiceEvent(ComponentServiceEvent.SAVE_COMPONENT_COMMAND, args, this);
				componentServiceEvent.dispatch();
				serviceIdentifier=SAVE_COMPONENT_EVENT;
	   			//09-Apr-09 AP Code Added as a part of Generalization of event :Code Start	   			
	   			PopUpManager.removePopUp(popup);
			}
			private function selectedItem(event:Event):void
			{
				/*var componentVO:ComponentVO  = new ComponentVO();
				componentVO.compId=event.currentTarget.selectedItem.compId;
				componentVO.compName=event.currentTarget.selectedItem.compName;
				componentVO.compType=event.currentTarget.selectedItem.compType;
				componentVO.compDesc=event.currentTarget.selectedItem.compDesc;
				componentVO.compVerId=event.currentTarget.selectedItem.compVerId;
				componentVO.compStatus=event.currentTarget.selectedItem.compStatus;
		
				var configUI:ComponentUI;
				popup = PopUpManager.createPopUp(this, ComponentUI ,false);
				configUI = ComponentUI(popup);
				configUI.create(popupClose,popupSave,componentVO);
	   	 		PopUpManager.centerPopUp(popup);*/
			}
			private function setRelativeColWidths():void
	  		{
			//Alert.show(processGrid.columns[0].createDate);
	  		ViewSchemas.columns[0].width = ViewSchemas.width*.08;
			ViewSchemas.columns[1].width = ViewSchemas.width*.2;
			ViewSchemas.columns[2].width = ViewSchemas.width*.2;
			ViewSchemas.columns[3].width = ViewSchemas.width*.1;
			ViewSchemas.columns[4].width = ViewSchemas.width*.2;
			ViewSchemas.columns[5].width = ViewSchemas.width*.1;
			ViewSchemas.columns[6].width = ViewSchemas.width*.1;
			}
			public function result( event:Object ):void 
			{
				switch(serviceIdentifier)
				{
					case SAVE_COMPONENT_EVENT:
						Alert.show("Component has been added successfully","Add Component");
						break;
				}
				
			}
			public function fault( info:Object ):void 
			{
				switch(serviceIdentifier)
				{
					case SAVE_COMPONENT_EVENT:
						AlertHelper.displayFault(info,"Component cannot be added");
						break;
				}
			}
			
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%" borderStyle="none" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0">
		
	<mx:HBox width="100%" borderStyle="none" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0">
		<mx:Label styleName="labelStyle" text="{modelLocator.screenName}" fontWeight="bold" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0"/>
		<mx:Spacer width="100%"/>
        <mx:Button id="addComponent" label="@Resource(key='button.ViewComponent.uploadComponent', bundle='TeevraUI')" click="openForm();"/>
    </mx:HBox>
		
		<mx:DataGrid id="ViewSchemas"  styleName="dataGridStyle" headerStyleName="dataGridheaderStyle" dataProvider="{modelLocator.components}" width="100%" doubleClickEnabled="true" doubleClick="selectedItem(event);" height="95%" creationComplete="setRelativeColWidths();">
			<mx:columns>       
				<mx:DataGridColumn dataField="compId" headerText="@Resource(key='column.ViewComponent.compId', bundle='TeevraUI')" />
				<mx:DataGridColumn dataField="compName" headerText="@Resource(key='column.ViewComponent.compName', bundle='TeevraUI')" />
				<mx:DataGridColumn dataField="compServiceName" headerText="@Resource(key='column.ViewComponent.compServiceName', bundle='TeevraUI')" />
				<mx:DataGridColumn dataField="compType" headerText="@Resource(key='column.ViewComponent.compType', bundle='TeevraUI')"/>
				<mx:DataGridColumn dataField="compDesc" headerText="@Resource(key='column.ViewComponent.compDesc', bundle='TeevraUI')"/>
				<mx:DataGridColumn dataField="compVerId" headerText="@Resource(key='column.ViewComponent.compVersion', bundle='TeevraUI')"/>
				<mx:DataGridColumn dataField="compStatus" headerText="@Resource(key='column.ViewComponent.compStatus', bundle='TeevraUI')"/>
			</mx:columns>	
		</mx:DataGrid>			
		
	</mx:VBox>
	
</mx:Module>
