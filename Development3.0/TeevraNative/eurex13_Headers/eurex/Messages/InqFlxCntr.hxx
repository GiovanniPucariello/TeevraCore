/* Generated by Xgen from: E130.08.01 SIR 149794 on: 2010-02-12 15:07 */
/*******************************************************************************
* 2010 (c) Copyright Eurex (R) Zuerich AG, Eurex (R) Frankfurt AG
********************************************************************************
*
*  FILE NAME:   InqFlxCntr.hxx
*
*  DESCRIPTION: Layouts used for
*               Inquire Flexible Contract
*
*******************************************************************************/

#ifndef _INQFLXCNTR_HXX_
#define _INQFLXCNTR_HXX_

#if defined(__cplusplus) || defined(c_plusplus)
extern "C" {
#endif

/******************************************************************************/

#include <DRIV_common_structs.hxx>
#include <DRIV_data_types.hxx>

/******************************************************************************/

#define BSC_INQ_FLX_FUT_REC_MAX                  10
#define BSC_INQ_FLX_OPT_REC_MAX                  10
#define EXT_INQ_FLX_FUT_REC_MAX                  10
#define EXT_INQ_FLX_OPT_REC_MAX                  10

/******************************************************************************/

#ifndef _BSC_INQ_FLX_FUT_REQUEST_T_
#define _BSC_INQ_FLX_FUT_REQUEST_T_

typedef struct bscInqFlxFutRequestTag
{
    char             membExchIdCod   [MEMB_EXCH_ID_COD_LEN];
    flxCntrTrnIdGrpT flxCntrTrnIdGrp;
    char             buyCod;
    flxFutCntrIdGrpT flxFutCntrIdGrp;
    trdrIdGrpT       trdrIdGrp;
    char             flxCntrTrnStsCod;
    char             trnDat          [DRIV_DATE_LEN];
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} bscInqFlxFutRequestT, *pBscInqFlxFutRequestT;

#endif  /* _BSC_INQ_FLX_FUT_REQUEST_T_ */

/******************************************************************************/

#ifndef _EXT_INQ_FLX_FUT_REQUEST_T_
#define _EXT_INQ_FLX_FUT_REQUEST_T_

typedef struct extInqFlxFutRequestTag
{
    acctTypCodGrpT   acctTypCodGrp;
    txtGrpT          txtGrp;
    char             membExchIdCodTo [DRIV_MEMB_EXCH_ID_COD_TO_LEN];
} extInqFlxFutRequestT, *pExtInqFlxFutRequestT;

#endif  /* _EXT_INQ_FLX_FUT_REQUEST_T_ */

/******************************************************************************/

#ifndef _INQ_FLX_FUT_REQUEST_T_
#define _INQ_FLX_FUT_REQUEST_T_

typedef struct inqFlxFutRequestTag
{
    dataHeaderT      header;
    bscInqFlxFutRequestT basic;
    extInqFlxFutRequestT extension;
} inqFlxFutRequestT, *pInqFlxFutRequestT;

#endif  /* _INQ_FLX_FUT_REQUEST_T_ */

/******************************************************************************/

#ifndef _BSC_INQ_FLX_FUT_REC_T_
#define _BSC_INQ_FLX_FUT_REC_T_

typedef struct bscInqFlxFutRecTag
{
    char             buyCod;
    flxFutCntrIdGrpT flxFutCntrIdGrp;
    char             membExchIdCod   [MEMB_EXCH_ID_COD_LEN];
    trdrIdGrpT       trdrIdGrp;
    flxCntrTrnIdGrpT flxCntrTrnIdGrp;
    char             trnIdSfxNoPnt   [DRIV_TRN_ID_SFX_NO_PNT_LEN];
    char             trnAdjStsCod;
    char             trdUntNo        [TRD_UNT_NO_LEN];
    char             trdMtchPrc      [DRIV_PRICE_LEN];
    char             trdXQty         [DRIV_VOLUME_LEN];
    char             flxCntrTrnStsCod;
    char             trnDat          [DRIV_DATE_LEN];
    char             trnTim          [DRIV_TIME_LEN];
    trdIdOboGrpT     trdIdOboGrp;
    char             dateLstUpdDat   [DRIV_TIMESTAMP_LEN];
} bscInqFlxFutRecT, *pBscInqFlxFutRecT;

#endif  /* _BSC_INQ_FLX_FUT_REC_T_ */

/******************************************************************************/

#ifndef _BSC_INQ_FLX_FUT_RESPONSE_T_
#define _BSC_INQ_FLX_FUT_RESPONSE_T_

typedef struct bscInqFlxFutResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    bscInqFlxFutRecT bscInqFlxFutRec [BSC_INQ_FLX_FUT_REC_MAX];
} bscInqFlxFutResponseT, *pBscInqFlxFutResponseT;

#endif  /* _BSC_INQ_FLX_FUT_RESPONSE_T_ */

/******************************************************************************/

#ifndef _EXT_INQ_FLX_FUT_REC_T_
#define _EXT_INQ_FLX_FUT_REC_T_

typedef struct extInqFlxFutRecTag
{
    acctTypCodGrpT   acctTypCodGrp;
    txtGrpT          txtGrp;
    char             membExchIdCodTo [DRIV_MEMB_EXCH_ID_COD_TO_LEN];
    char             abdnInd;
    char             flxCntrClsPrc   [DRIV_PRICE_LEN];
    char             flxCntrStlPrc   [DRIV_PRICE_LEN];
    char             clsStsCod;
    char             flxCntrGuStsCod;
    char             takUpApprInd;
    char             givUpAcptInd;
    char             takUpAcptInd;
    char             membPropCtpyIdCod [MEMB_EXCH_ID_COD_LEN];
    char             flxCntrSynProdId [PROD_ID_LEN];
    char             flxCntrMtnCod;
    char             flxCntrActnMap  [FLX_CNTR_ACTN_MAP_LEN];
    char             cshAmntPosnTsf  [DRIV_AMOUNT_LEN];
} extInqFlxFutRecT, *pExtInqFlxFutRecT;

#endif  /* _EXT_INQ_FLX_FUT_REC_T_ */

/******************************************************************************/

#ifndef _EXT_INQ_FLX_FUT_RESPONSE_T_
#define _EXT_INQ_FLX_FUT_RESPONSE_T_

typedef struct extInqFlxFutResponseTag
{
    extInqFlxFutRecT extInqFlxFutRec [EXT_INQ_FLX_FUT_REC_MAX];
} extInqFlxFutResponseT, *pExtInqFlxFutResponseT;

#endif  /* _EXT_INQ_FLX_FUT_RESPONSE_T_ */

/******************************************************************************/

#ifndef _INQ_FLX_FUT_RESPONSE_T_
#define _INQ_FLX_FUT_RESPONSE_T_

typedef struct inqFlxFutResponseTag
{
    dataHeaderT      header;
    bscInqFlxFutResponseT basic;
    extInqFlxFutResponseT extension;
} inqFlxFutResponseT, *pInqFlxFutResponseT;

#endif  /* _INQ_FLX_FUT_RESPONSE_T_ */

/******************************************************************************/

#ifndef _BSC_INQ_FLX_OPT_REQUEST_T_
#define _BSC_INQ_FLX_OPT_REQUEST_T_

typedef struct bscInqFlxOptRequestTag
{
    char             membExchIdCod   [MEMB_EXCH_ID_COD_LEN];
    flxCntrTrnIdGrpT flxCntrTrnIdGrp;
    char             buyCod;
    flxOptCntrIdGrpT flxOptCntrIdGrp;
    trdrIdGrpT       trdrIdGrp;
    char             flxCntrTrnStsCod;
    char             trnDat          [DRIV_DATE_LEN];
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} bscInqFlxOptRequestT, *pBscInqFlxOptRequestT;

#endif  /* _BSC_INQ_FLX_OPT_REQUEST_T_ */

/******************************************************************************/

#ifndef _EXT_INQ_FLX_OPT_REQUEST_T_
#define _EXT_INQ_FLX_OPT_REQUEST_T_

typedef struct extInqFlxOptRequestTag
{
    acctTypCodGrpT   acctTypCodGrp;
    txtGrpT          txtGrp;
    char             membExchIdCodTo [DRIV_MEMB_EXCH_ID_COD_TO_LEN];
} extInqFlxOptRequestT, *pExtInqFlxOptRequestT;

#endif  /* _EXT_INQ_FLX_OPT_REQUEST_T_ */

/******************************************************************************/

#ifndef _INQ_FLX_OPT_REQUEST_T_
#define _INQ_FLX_OPT_REQUEST_T_

typedef struct inqFlxOptRequestTag
{
    dataHeaderT      header;
    bscInqFlxOptRequestT basic;
    extInqFlxOptRequestT extension;
} inqFlxOptRequestT, *pInqFlxOptRequestT;

#endif  /* _INQ_FLX_OPT_REQUEST_T_ */

/******************************************************************************/

#ifndef _BSC_INQ_FLX_OPT_REC_T_
#define _BSC_INQ_FLX_OPT_REC_T_

typedef struct bscInqFlxOptRecTag
{
    char             buyCod;
    flxOptCntrIdGrpT flxOptCntrIdGrp;
    char             membExchIdCod   [MEMB_EXCH_ID_COD_LEN];
    trdrIdGrpT       trdrIdGrp;
    flxCntrTrnIdGrpT flxCntrTrnIdGrp;
    char             trnIdSfxNoPnt   [DRIV_TRN_ID_SFX_NO_PNT_LEN];
    char             trnAdjStsCod;
    char             trdUntNo        [TRD_UNT_NO_LEN];
    char             trdMtchPrc      [DRIV_PRICE_LEN];
    char             trdXQty         [DRIV_VOLUME_LEN];
    char             flxCntrTrnStsCod;
    char             trnDat          [DRIV_DATE_LEN];
    char             trnTim          [DRIV_TIME_LEN];
    trdIdOboGrpT     trdIdOboGrp;
    char             dateLstUpdDat   [DRIV_TIMESTAMP_LEN];
} bscInqFlxOptRecT, *pBscInqFlxOptRecT;

#endif  /* _BSC_INQ_FLX_OPT_REC_T_ */

/******************************************************************************/

#ifndef _BSC_INQ_FLX_OPT_RESPONSE_T_
#define _BSC_INQ_FLX_OPT_RESPONSE_T_

typedef struct bscInqFlxOptResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    bscInqFlxOptRecT bscInqFlxOptRec [BSC_INQ_FLX_OPT_REC_MAX];
} bscInqFlxOptResponseT, *pBscInqFlxOptResponseT;

#endif  /* _BSC_INQ_FLX_OPT_RESPONSE_T_ */

/******************************************************************************/

#ifndef _EXT_INQ_FLX_OPT_REC_T_
#define _EXT_INQ_FLX_OPT_REC_T_

typedef struct extInqFlxOptRecTag
{
    acctTypCodGrpT   acctTypCodGrp;
    txtGrpT          txtGrp;
    char             membExchIdCodTo [DRIV_MEMB_EXCH_ID_COD_TO_LEN];
    char             abdnInd;
    char             flxCntrClsPrc   [DRIV_PRICE_LEN];
    char             flxCntrStlPrc   [DRIV_PRICE_LEN];
    char             clsStsCod;
    char             flxCntrGuStsCod;
    char             takUpApprInd;
    char             givUpAcptInd;
    char             takUpAcptInd;
    char             membPropCtpyIdCod [MEMB_EXCH_ID_COD_LEN];
    char             flxCntrSynProdId [PROD_ID_LEN];
    char             flxCntrMtnCod;
    char             flxCntrActnMap  [FLX_CNTR_ACTN_MAP_LEN];
    char             cshAmntPosnTsf  [DRIV_AMOUNT_LEN];
} extInqFlxOptRecT, *pExtInqFlxOptRecT;

#endif  /* _EXT_INQ_FLX_OPT_REC_T_ */

/******************************************************************************/

#ifndef _EXT_INQ_FLX_OPT_RESPONSE_T_
#define _EXT_INQ_FLX_OPT_RESPONSE_T_

typedef struct extInqFlxOptResponseTag
{
    extInqFlxOptRecT extInqFlxOptRec [EXT_INQ_FLX_OPT_REC_MAX];
} extInqFlxOptResponseT, *pExtInqFlxOptResponseT;

#endif  /* _EXT_INQ_FLX_OPT_RESPONSE_T_ */

/******************************************************************************/

#ifndef _INQ_FLX_OPT_RESPONSE_T_
#define _INQ_FLX_OPT_RESPONSE_T_

typedef struct inqFlxOptResponseTag
{
    dataHeaderT      header;
    bscInqFlxOptResponseT basic;
    extInqFlxOptResponseT extension;
} inqFlxOptResponseT, *pInqFlxOptResponseT;

#endif  /* _INQ_FLX_OPT_RESPONSE_T_ */

/******************************************************************************/

#if defined(__cplusplus) || defined(c_plusplus)
} /* close scope of 'extern "C"' declaration which encloses file. */
#endif

#endif /* _INQFLXCNTR_HXX_ */

/******************************************************************************/
/* End of file InqFlxCntr.hxx */
/******************************************************************************/
