/* Generated by Xgen from: E120.16.01 SIR 123595 on: 2009-04-29 10:47 */
/*******************************************************************************
* 2009 (c) Copyright Eurex (R) Zuerich AG, Eurex (R) Frankfurt AG
********************************************************************************
*
*  FILE NAME:   InqAllSLegTrd.hxx
*
*  DESCRIPTION: Layouts used for
*               Inquire All Single Leg Trades
*
*******************************************************************************/

#ifndef _INQALLSLEGTRD_HXX_
#define _INQALLSLEGTRD_HXX_

#if defined(__cplusplus) || defined(c_plusplus)
extern "C" {
#endif

/******************************************************************************/

#include <DRIV_common_structs.hxx>
#include <DRIV_data_types.hxx>

/******************************************************************************/

#define FUT_BSC_INQ_ALL_SLEG_TRD_REC_MAX         27
#define OPT_BSC_INQ_ALL_SLEG_TRD_REC_MAX         27

/******************************************************************************/

#ifndef _FUT_BSC_INQ_ALL_S_LEG_TRD_REQUEST_T_
#define _FUT_BSC_INQ_ALL_S_LEG_TRD_REQUEST_T_

typedef struct futBscInqAllSLegTrdRequestTag
{
    futCntrIdGrpT    futCntrIdGrp;
    char             trdOrigTyp;
    char             trdTyp;
    char             trnDat          [DRIV_DATE_LEN];
    char             timMin          [DRIV_TIME_LEN];
    char             timMax          [DRIV_TIME_LEN];
    char             trdEvntSeqNoMin [TRD_EVNT_TRN_ID_MIN_LEN];
    char             trdEvntSeqNoMax [TRD_EVNT_TRN_ID_MAX_LEN];
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} futBscInqAllSLegTrdRequestT, *pFutBscInqAllSLegTrdRequestT;

#endif  /* _FUT_BSC_INQ_ALL_S_LEG_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _FUT_INQ_ALL_S_LEG_TRD_REQUEST_T_
#define _FUT_INQ_ALL_S_LEG_TRD_REQUEST_T_

typedef struct futInqAllSLegTrdRequestTag
{
    dataHeaderT      header;
    futBscInqAllSLegTrdRequestT basic;
} futInqAllSLegTrdRequestT, *pFutInqAllSLegTrdRequestT;

#endif  /* _FUT_INQ_ALL_S_LEG_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _FUT_BSC_INQ_ALL_S_LEG_TRD_REC_T_
#define _FUT_BSC_INQ_ALL_S_LEG_TRD_REC_T_

typedef struct futBscInqAllSLegTrdRecTag
{
    futCntrIdGrpT    futCntrIdGrp;
    char             trdEvntSeqNo    [TRD_EVNT_TRN_ID_LEN];
    char             trdPrcTyp;
    char             revsInd;
    char             trdQty          [DRIV_VOLUME_LEN];
    char             trdMtchPrc      [DRIV_PRICE_LEN];
    char             trnDat          [DRIV_DATE_LEN];
    char             trnTim          [DRIV_TIME_LEN];
    char             noOfBuy         [NO_OF_BUY_LEN];
    char             noOfSel         [NO_OF_SEL_LEN];
    char             agrsrSidCod;
    char             totTrdQty       [DRIV_QUANTITY_LEN];
    char             trdTyp;
    char             trnIdNo         [TRN_ID_NO_LEN];
} futBscInqAllSLegTrdRecT, *pFutBscInqAllSLegTrdRecT;

#endif  /* _FUT_BSC_INQ_ALL_S_LEG_TRD_REC_T_ */

/******************************************************************************/

#ifndef _FUT_BSC_INQ_ALL_S_LEG_TRD_RESPONSE_T_
#define _FUT_BSC_INQ_ALL_S_LEG_TRD_RESPONSE_T_

typedef struct futBscInqAllSLegTrdResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    futBscInqAllSLegTrdRecT futBscInqAllSLegTrdRec [FUT_BSC_INQ_ALL_SLEG_TRD_REC_MAX];
} futBscInqAllSLegTrdResponseT, *pFutBscInqAllSLegTrdResponseT;

#endif  /* _FUT_BSC_INQ_ALL_S_LEG_TRD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _FUT_INQ_ALL_S_LEG_TRD_RESPONSE_T_
#define _FUT_INQ_ALL_S_LEG_TRD_RESPONSE_T_

typedef struct futInqAllSLegTrdResponseTag
{
    dataHeaderT      header;
    futBscInqAllSLegTrdResponseT basic;
} futInqAllSLegTrdResponseT, *pFutInqAllSLegTrdResponseT;

#endif  /* _FUT_INQ_ALL_S_LEG_TRD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_ALL_S_LEG_TRD_REQUEST_T_
#define _OPT_BSC_INQ_ALL_S_LEG_TRD_REQUEST_T_

typedef struct optBscInqAllSLegTrdRequestTag
{
    optCntrIdGrpT    optCntrIdGrp;
    char             trdOrigTyp;
    char             trdTyp;
    char             trnDat          [DRIV_DATE_LEN];
    char             timMin          [DRIV_TIME_LEN];
    char             timMax          [DRIV_TIME_LEN];
    char             trdEvntSeqNoMin [TRD_EVNT_TRN_ID_MIN_LEN];
    char             trdEvntSeqNoMax [TRD_EVNT_TRN_ID_MAX_LEN];
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} optBscInqAllSLegTrdRequestT, *pOptBscInqAllSLegTrdRequestT;

#endif  /* _OPT_BSC_INQ_ALL_S_LEG_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _OPT_INQ_ALL_S_LEG_TRD_REQUEST_T_
#define _OPT_INQ_ALL_S_LEG_TRD_REQUEST_T_

typedef struct optInqAllSLegTrdRequestTag
{
    dataHeaderT      header;
    optBscInqAllSLegTrdRequestT basic;
} optInqAllSLegTrdRequestT, *pOptInqAllSLegTrdRequestT;

#endif  /* _OPT_INQ_ALL_S_LEG_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_ALL_S_LEG_TRD_REC_T_
#define _OPT_BSC_INQ_ALL_S_LEG_TRD_REC_T_

typedef struct optBscInqAllSLegTrdRecTag
{
    optCntrIdGrpT    optCntrIdGrp;
    char             trdEvntSeqNo    [TRD_EVNT_TRN_ID_LEN];
    char             trdPrcTyp;
    char             revsInd;
    char             trdQty          [DRIV_VOLUME_LEN];
    char             trdMtchPrc      [DRIV_PRICE_LEN];
    char             trnDat          [DRIV_DATE_LEN];
    char             trnTim          [DRIV_TIME_LEN];
    char             noOfBuy         [NO_OF_BUY_LEN];
    char             noOfSel         [NO_OF_SEL_LEN];
    char             agrsrSidCod;
    char             totTrdQty       [DRIV_QUANTITY_LEN];
    char             trdTyp;
    char             trnIdNo         [TRN_ID_NO_LEN];
} optBscInqAllSLegTrdRecT, *pOptBscInqAllSLegTrdRecT;

#endif  /* _OPT_BSC_INQ_ALL_S_LEG_TRD_REC_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_ALL_S_LEG_TRD_RESPONSE_T_
#define _OPT_BSC_INQ_ALL_S_LEG_TRD_RESPONSE_T_

typedef struct optBscInqAllSLegTrdResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    optBscInqAllSLegTrdRecT optBscInqAllSLegTrdRec [OPT_BSC_INQ_ALL_SLEG_TRD_REC_MAX];
} optBscInqAllSLegTrdResponseT, *pOptBscInqAllSLegTrdResponseT;

#endif  /* _OPT_BSC_INQ_ALL_S_LEG_TRD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _OPT_INQ_ALL_S_LEG_TRD_RESPONSE_T_
#define _OPT_INQ_ALL_S_LEG_TRD_RESPONSE_T_

typedef struct optInqAllSLegTrdResponseTag
{
    dataHeaderT      header;
    optBscInqAllSLegTrdResponseT basic;
} optInqAllSLegTrdResponseT, *pOptInqAllSLegTrdResponseT;

#endif  /* _OPT_INQ_ALL_S_LEG_TRD_RESPONSE_T_ */

/******************************************************************************/

#if defined(__cplusplus) || defined(c_plusplus)
} /* close scope of 'extern "C"' declaration which encloses file. */
#endif

#endif /* _INQALLSLEGTRD_HXX_ */

/******************************************************************************/
/* End of file InqAllSLegTrd.hxx */
/******************************************************************************/
