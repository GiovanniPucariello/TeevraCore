/* Generated by Xgen from: E90.02.00 on: 2006-02-16 08:30 */
/*******************************************************************************
* 2006 (c) Copyright Eurex (R) Zuerich AG, Eurex (R) Frankfurt AG
********************************************************************************
*
*  FILE NAME:   InqAllTrd.hxx
*
*  DESCRIPTION: Layouts used for
*               Inquire All Trades
*
*******************************************************************************/

#ifndef _INQALLTRD_HXX_
#define _INQALLTRD_HXX_

#if defined(__cplusplus) || defined(c_plusplus)
extern "C" {
#endif

/******************************************************************************/

#include <DRIV_common_structs.hxx>
#include <DRIV_data_types.hxx>

/******************************************************************************/

#define FUT_BSC_INQ_ALL_TRD_REC_MAX              19
#define FUT_EXT_INQ_ALL_TRD_REC_MAX              19
#define OPT_BSC_INQ_ALL_TRD_REC_MAX              19

/******************************************************************************/

#ifndef _FUT_BSC_INQ_ALL_TRD_REQUEST_T_
#define _FUT_BSC_INQ_ALL_TRD_REQUEST_T_

typedef struct futBscInqAllTrdRequestTag
{
    futCntrIdGrpT    futCntrIdGrp;
    trdrIdGrpT       trdrIdGrp;
    char             timMin          [DRIV_TIME_LEN];
    char             timMax          [DRIV_TIME_LEN];
    char             trnDat          [DRIV_DATE_LEN];
    char             trdTyp;
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} futBscInqAllTrdRequestT, *pFutBscInqAllTrdRequestT;

#endif  /* _FUT_BSC_INQ_ALL_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _FUT_INQ_ALL_TRD_REQUEST_T_
#define _FUT_INQ_ALL_TRD_REQUEST_T_

typedef struct futInqAllTrdRequestTag
{
    dataHeaderT      header;
    futBscInqAllTrdRequestT basic;
} futInqAllTrdRequestT, *pFutInqAllTrdRequestT;

#endif  /* _FUT_INQ_ALL_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _FUT_BSC_INQ_ALL_TRD_REC_T_
#define _FUT_BSC_INQ_ALL_TRD_REC_T_

typedef struct futBscInqAllTrdRecTag
{
    futCntrIdGrpT    futCntrIdGrp;
    char             dblLegTyp       [DBL_LEG_TYP_LEN];
    char             stratTyp        [STRAT_TYP_LEN];
    char             trnIdNo         [TRN_ID_NO_LEN];
    char             trdXQty         [DRIV_VOLUME_LEN];
    char             trdMtchPrc      [DRIV_PRICE_LEN];
    char             trnDat          [DRIV_DATE_LEN];
    char             trnTim          [DRIV_TIME_LEN];
    char             trdTyp;
    char             currTypCod      [CURR_TYP_COD_LEN];
    char             dateLstUpdDat   [DRIV_TIMESTAMP_LEN];
} futBscInqAllTrdRecT, *pFutBscInqAllTrdRecT;

#endif  /* _FUT_BSC_INQ_ALL_TRD_REC_T_ */

/******************************************************************************/

#ifndef _FUT_BSC_INQ_ALL_TRD_RESPONSE_T_
#define _FUT_BSC_INQ_ALL_TRD_RESPONSE_T_

typedef struct futBscInqAllTrdResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    futBscInqAllTrdRecT futBscInqAllTrdRec [FUT_BSC_INQ_ALL_TRD_REC_MAX];
} futBscInqAllTrdResponseT, *pFutBscInqAllTrdResponseT;

#endif  /* _FUT_BSC_INQ_ALL_TRD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _FUT_EXT_INQ_ALL_TRD_REC_T_
#define _FUT_EXT_INQ_ALL_TRD_REC_T_

typedef struct futExtInqAllTrdRecTag
{
    char             undrIsinCod     [UNDR_ISIN_COD_LEN];
    char             grsBas          [GRS_BAS_LEN];
    char             swapEndDat      [DRIV_DATE_LEN];
    char             cpnFixRat       [CPN_FIX_RAT_LEN];
} futExtInqAllTrdRecT, *pFutExtInqAllTrdRecT;

#endif  /* _FUT_EXT_INQ_ALL_TRD_REC_T_ */

/******************************************************************************/

#ifndef _FUT_EXT_INQ_ALL_TRD_RESPONSE_T_
#define _FUT_EXT_INQ_ALL_TRD_RESPONSE_T_

typedef struct futExtInqAllTrdResponseTag
{
    futExtInqAllTrdRecT futExtInqAllTrdRec [FUT_EXT_INQ_ALL_TRD_REC_MAX];
} futExtInqAllTrdResponseT, *pFutExtInqAllTrdResponseT;

#endif  /* _FUT_EXT_INQ_ALL_TRD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _FUT_INQ_ALL_TRD_RESPONSE_T_
#define _FUT_INQ_ALL_TRD_RESPONSE_T_

typedef struct futInqAllTrdResponseTag
{
    dataHeaderT      header;
    futBscInqAllTrdResponseT basic;
    futExtInqAllTrdResponseT extension;
} futInqAllTrdResponseT, *pFutInqAllTrdResponseT;

#endif  /* _FUT_INQ_ALL_TRD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_ALL_TRD_REQUEST_T_
#define _OPT_BSC_INQ_ALL_TRD_REQUEST_T_

typedef struct optBscInqAllTrdRequestTag
{
    optCntrIdGrpT    optCntrIdGrp;
    trdrIdGrpT       trdrIdGrp;
    char             timMin          [DRIV_TIME_LEN];
    char             timMax          [DRIV_TIME_LEN];
    char             trnDat          [DRIV_DATE_LEN];
    char             trdTyp;
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} optBscInqAllTrdRequestT, *pOptBscInqAllTrdRequestT;

#endif  /* _OPT_BSC_INQ_ALL_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _OPT_INQ_ALL_TRD_REQUEST_T_
#define _OPT_INQ_ALL_TRD_REQUEST_T_

typedef struct optInqAllTrdRequestTag
{
    dataHeaderT      header;
    optBscInqAllTrdRequestT basic;
} optInqAllTrdRequestT, *pOptInqAllTrdRequestT;

#endif  /* _OPT_INQ_ALL_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_ALL_TRD_REC_T_
#define _OPT_BSC_INQ_ALL_TRD_REC_T_

typedef struct optBscInqAllTrdRecTag
{
    optCntrIdGrpT    optCntrIdGrp;
    char             dblLegTyp       [DBL_LEG_TYP_LEN];
    char             stratTyp        [STRAT_TYP_LEN];
    char             trnIdNo         [TRN_ID_NO_LEN];
    char             trdXQty         [DRIV_VOLUME_LEN];
    char             trdMtchPrc      [DRIV_PRICE_LEN];
    char             trnDat          [DRIV_DATE_LEN];
    char             trnTim          [DRIV_TIME_LEN];
    char             trdTyp;
    char             currTypCod      [CURR_TYP_COD_LEN];
    char             dateLstUpdDat   [DRIV_TIMESTAMP_LEN];
} optBscInqAllTrdRecT, *pOptBscInqAllTrdRecT;

#endif  /* _OPT_BSC_INQ_ALL_TRD_REC_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_ALL_TRD_RESPONSE_T_
#define _OPT_BSC_INQ_ALL_TRD_RESPONSE_T_

typedef struct optBscInqAllTrdResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    optBscInqAllTrdRecT optBscInqAllTrdRec [OPT_BSC_INQ_ALL_TRD_REC_MAX];
} optBscInqAllTrdResponseT, *pOptBscInqAllTrdResponseT;

#endif  /* _OPT_BSC_INQ_ALL_TRD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _OPT_INQ_ALL_TRD_RESPONSE_T_
#define _OPT_INQ_ALL_TRD_RESPONSE_T_

typedef struct optInqAllTrdResponseTag
{
    dataHeaderT      header;
    optBscInqAllTrdResponseT basic;
} optInqAllTrdResponseT, *pOptInqAllTrdResponseT;

#endif  /* _OPT_INQ_ALL_TRD_RESPONSE_T_ */

/******************************************************************************/

#if defined(__cplusplus) || defined(c_plusplus)
} /* close scope of 'extern "C"' declaration which encloses file. */
#endif

#endif /* _INQALLTRD_HXX_ */

/******************************************************************************/
/* End of file InqAllTrd.hxx */
/******************************************************************************/
