/* Generated by Xgen from: E120.27.02 SIR 134649 on: 2009-06-30 17:11 */
/*******************************************************************************
* 2009 (c) Copyright Eurex (R) Zuerich AG, Eurex (R) Frankfurt AG
********************************************************************************
*
*  FILE NAME:   InqProd.hxx
*
*  DESCRIPTION: Layouts used for
*               Inquire Product
*
*******************************************************************************/

#ifndef _INQPROD_HXX_
#define _INQPROD_HXX_

#if defined(__cplusplus) || defined(c_plusplus)
extern "C" {
#endif

/******************************************************************************/

#include <DRIV_common_structs.hxx>
#include <DRIV_data_types.hxx>

/******************************************************************************/

#define FUT_BSC_INQ_PROD_PRC_STEP_TBL_GRP_MAX    8
#define FUT_BSC_INQ_PROD_REC_MAX                 5
#define FUT_BSC_INQ_PROD_SPRD_LNK_REC_MAX        20
#define FUT_BSC_INQ_PROD_SPRD_TBL_DATA_GRP_MAX   30
#define OPT_BSC_INQ_PROD_PRC_STEP_TBL_GRP_MAX    8
#define OPT_BSC_INQ_PROD_REC_MAX                 5
#define OPT_BSC_INQ_PROD_SPRD_LNK_REC_MAX        20
#define OPT_BSC_INQ_PROD_SPRD_TBL_DATA_GRP_MAX   30

/******************************************************************************/

#ifndef _FUT_BSC_INQ_PROD_REQUEST_T_
#define _FUT_BSC_INQ_PROD_REQUEST_T_

typedef struct futBscInqProdRequestTag
{
    char             prodId          [PROD_ID_LEN];
    char             prodTypId       [PROD_TYP_ID_LEN];
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} futBscInqProdRequestT, *pFutBscInqProdRequestT;

#endif  /* _FUT_BSC_INQ_PROD_REQUEST_T_ */

/******************************************************************************/

#ifndef _FUT_INQ_PROD_REQUEST_T_
#define _FUT_INQ_PROD_REQUEST_T_

typedef struct futInqProdRequestTag
{
    dataHeaderT      header;
    futBscInqProdRequestT basic;
} futInqProdRequestT, *pFutInqProdRequestT;

#endif  /* _FUT_INQ_PROD_REQUEST_T_ */

/******************************************************************************/

#ifndef _FUT_BSC_INQ_PROD_REC_T_
#define _FUT_BSC_INQ_PROD_REC_T_

typedef struct futBscInqProdRecTag
{
    char             prodId          [PROD_ID_LEN];
    char             isinCod         [ISIN_COD_LEN];
    char             currTypCod      [CURR_TYP_COD_LEN];
    char             prodShtNam      [PROD_SHT_NAM_LEN];
    char             exchAff;
    char             maxPrc          [MAX_PRC_LEN];
    char             quoEqlQtyInd;
    char             quoMinQty       [DRIV_VOLUME_LEN];
    char             fastMktMinQty   [DRIV_VOLUME_LEN];
    char             fastMktPcnt     [FAST_MKT_PCNT_LEN];
    sprdTblGrpT      sprdTblGrp      [FUT_BSC_INQ_PROD_SPRD_TBL_DATA_GRP_MAX];
    sprdLnkRecT      sprdLnkRec      [FUT_BSC_INQ_PROD_SPRD_LNK_REC_MAX];
    char             setlDispDcml    [SETL_DISP_DCML_LEN];
    char             undrDispDcml    [UNDR_DISP_DCML_LEN];
    char             mgnStylTyp;
    char             oneSidQuoInd;
    char             primExchIdCod   [PRIM_EXCH_ID_COD_LEN];
    char             undrId          [UNDR_ID_LEN];
    char             undrIsinCod     [UNDR_ISIN_COD_LEN];
    char             ticSiz          [DRIV_PRICE_LEN];
    char             ticVal          [DRIV_TIC_VAL_LEN];
    char             prodTypCod      [PROD_TYP_COD_LEN];
    char             prodTypNam      [PROD_TYP_NAM_LEN];
    char             ipsOfstPrc      [DRIV_PRICE_LEN];
    char             ipsRtio         [IPS_RTIO_LEN];
    char             ipsRtio2        [IPS_RTIO2_LEN];
    char             ipsProdId       [IPS_PROD_ID_LEN];
    char             ipsProdId2      [IPS_PROD_ID2_LEN];
    char             theoUndrId      [DRIV_THEO_UNDR_ID_LEN];
    char             mtchTypCod;
    char             prodDispDcml    [PROD_DISP_DCML_LEN];
    prcStepTblGrpT   prcStepTblGrp   [FUT_BSC_INQ_PROD_PRC_STEP_TBL_GRP_MAX];
    char             preTrdRiskRndLot [DRIV_VOLUME_LEN];
} futBscInqProdRecT, *pFutBscInqProdRecT;

#endif  /* _FUT_BSC_INQ_PROD_REC_T_ */

/******************************************************************************/

#ifndef _FUT_BSC_INQ_PROD_RESPONSE_T_
#define _FUT_BSC_INQ_PROD_RESPONSE_T_

typedef struct futBscInqProdResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    futBscInqProdRecT futBscInqProdRec [FUT_BSC_INQ_PROD_REC_MAX];
} futBscInqProdResponseT, *pFutBscInqProdResponseT;

#endif  /* _FUT_BSC_INQ_PROD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _FUT_INQ_PROD_RESPONSE_T_
#define _FUT_INQ_PROD_RESPONSE_T_

typedef struct futInqProdResponseTag
{
    dataHeaderT      header;
    futBscInqProdResponseT basic;
} futInqProdResponseT, *pFutInqProdResponseT;

#endif  /* _FUT_INQ_PROD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_PROD_REQUEST_T_
#define _OPT_BSC_INQ_PROD_REQUEST_T_

typedef struct optBscInqProdRequestTag
{
    char             prodId          [PROD_ID_LEN];
    char             prodTypId       [PROD_TYP_ID_LEN];
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} optBscInqProdRequestT, *pOptBscInqProdRequestT;

#endif  /* _OPT_BSC_INQ_PROD_REQUEST_T_ */

/******************************************************************************/

#ifndef _OPT_INQ_PROD_REQUEST_T_
#define _OPT_INQ_PROD_REQUEST_T_

typedef struct optInqProdRequestTag
{
    dataHeaderT      header;
    optBscInqProdRequestT basic;
} optInqProdRequestT, *pOptInqProdRequestT;

#endif  /* _OPT_INQ_PROD_REQUEST_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_PROD_REC_T_
#define _OPT_BSC_INQ_PROD_REC_T_

typedef struct optBscInqProdRecTag
{
    char             prodId          [PROD_ID_LEN];
    char             isinCod         [ISIN_COD_LEN];
    char             currTypCod      [CURR_TYP_COD_LEN];
    char             prodShtNam      [PROD_SHT_NAM_LEN];
    char             exchAff;
    char             maxPrc          [MAX_PRC_LEN];
    char             quoEqlQtyInd;
    char             quoMinQty       [DRIV_VOLUME_LEN];
    char             entMasQuoRecMax [ENT_MAS_QUO_REC_MAX_LEN];
    char             fastMktMinQty   [DRIV_VOLUME_LEN];
    char             fastMktPcnt     [FAST_MKT_PCNT_LEN];
    sprdTblGrpT      sprdTblGrp      [OPT_BSC_INQ_PROD_SPRD_TBL_DATA_GRP_MAX];
    sprdLnkRecT      sprdLnkRec      [OPT_BSC_INQ_PROD_SPRD_LNK_REC_MAX];
    char             setlDispDcml    [SETL_DISP_DCML_LEN];
    char             undrDispDcml    [UNDR_DISP_DCML_LEN];
    char             oneSidQuoInd;
    char             primExchIdCod   [PRIM_EXCH_ID_COD_LEN];
    char             undrId          [UNDR_ID_LEN];
    char             undrIsinCod     [UNDR_ISIN_COD_LEN];
    char             exerStylTyp;
    char             mgnStylTyp;
    char             ticSiz          [DRIV_PRICE_LEN];
    char             ticVal          [DRIV_TIC_VAL_LEN];
    char             stratMtchTypCod;
    char             prodTypCod      [PROD_TYP_COD_LEN];
    char             prodTypNam      [PROD_TYP_NAM_LEN];
    char             exerPrcDcml;
    prcStepTblGrpT   prcStepTblGrp   [OPT_BSC_INQ_PROD_PRC_STEP_TBL_GRP_MAX];
    char             theoUndrId      [DRIV_THEO_UNDR_ID_LEN];
    char             prodDispDcml    [PROD_DISP_DCML_LEN];
    char             preTrdRiskRndLot [DRIV_VOLUME_LEN];
    char             volaStratUndrId [UNDR_ID_LEN];
} optBscInqProdRecT, *pOptBscInqProdRecT;

#endif  /* _OPT_BSC_INQ_PROD_REC_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_PROD_RESPONSE_T_
#define _OPT_BSC_INQ_PROD_RESPONSE_T_

typedef struct optBscInqProdResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    optBscInqProdRecT optBscInqProdRec [OPT_BSC_INQ_PROD_REC_MAX];
} optBscInqProdResponseT, *pOptBscInqProdResponseT;

#endif  /* _OPT_BSC_INQ_PROD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _OPT_INQ_PROD_RESPONSE_T_
#define _OPT_INQ_PROD_RESPONSE_T_

typedef struct optInqProdResponseTag
{
    dataHeaderT      header;
    optBscInqProdResponseT basic;
} optInqProdResponseT, *pOptInqProdResponseT;

#endif  /* _OPT_INQ_PROD_RESPONSE_T_ */

/******************************************************************************/

#if defined(__cplusplus) || defined(c_plusplus)
} /* close scope of 'extern "C"' declaration which encloses file. */
#endif

#endif /* _INQPROD_HXX_ */

/******************************************************************************/
/* End of file InqProd.hxx */
/******************************************************************************/
