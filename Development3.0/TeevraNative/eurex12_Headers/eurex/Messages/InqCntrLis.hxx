/* Generated by Xgen from: E120.07.02 SIR 123667 on: 2009-02-16 10:26 */
/*******************************************************************************
* 2009 (c) Copyright Eurex (R) Zuerich AG, Eurex (R) Frankfurt AG
********************************************************************************
*
*  FILE NAME:   InqCntrLis.hxx
*
*  DESCRIPTION: Layouts used for
*               Inquire Contract List
*
*******************************************************************************/

#ifndef _INQCNTRLIS_HXX_
#define _INQCNTRLIS_HXX_

#if defined(__cplusplus) || defined(c_plusplus)
extern "C" {
#endif

/******************************************************************************/

#include <DRIV_common_structs.hxx>
#include <DRIV_data_types.hxx>

/******************************************************************************/

#define FUT_BSC_INQ_CNTR_LIS_REC_MAX             999
#define OPT_BSC_INQ_CNTR_LIS_REC_MAX             493

/******************************************************************************/

#ifndef _FUT_BSC_INQ_CNTR_LIS_REQUEST_T_
#define _FUT_BSC_INQ_CNTR_LIS_REQUEST_T_

typedef struct futBscInqCntrLisRequestTag
{
    char             prodId          [PROD_ID_LEN];
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} futBscInqCntrLisRequestT, *pFutBscInqCntrLisRequestT;

#endif  /* _FUT_BSC_INQ_CNTR_LIS_REQUEST_T_ */

/******************************************************************************/

#ifndef _FUT_INQ_CNTR_LIS_REQUEST_T_
#define _FUT_INQ_CNTR_LIS_REQUEST_T_

typedef struct futInqCntrLisRequestTag
{
    dataHeaderT      header;
    futBscInqCntrLisRequestT basic;
} futInqCntrLisRequestT, *pFutInqCntrLisRequestT;

#endif  /* _FUT_INQ_CNTR_LIS_REQUEST_T_ */

/******************************************************************************/

#ifndef _FUT_BSC_INQ_CNTR_LIS_REC_T_
#define _FUT_BSC_INQ_CNTR_LIS_REC_T_

typedef struct futBscInqCntrLisRecTag
{
    char             cntrExpMthDat   [CNTR_EXP_MTH_DAT_LEN];
    char             cntrExpYrDat    [CNTR_EXP_YR_DAT_LEN];
    char             cntrStsCod;
} futBscInqCntrLisRecT, *pFutBscInqCntrLisRecT;

#endif  /* _FUT_BSC_INQ_CNTR_LIS_REC_T_ */

/******************************************************************************/

#ifndef _FUT_BSC_INQ_CNTR_LIS_RESPONSE_T_
#define _FUT_BSC_INQ_CNTR_LIS_RESPONSE_T_

typedef struct futBscInqCntrLisResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    futBscInqCntrLisRecT futBscInqCntrLisRec [FUT_BSC_INQ_CNTR_LIS_REC_MAX];
} futBscInqCntrLisResponseT, *pFutBscInqCntrLisResponseT;

#endif  /* _FUT_BSC_INQ_CNTR_LIS_RESPONSE_T_ */

/******************************************************************************/

#ifndef _FUT_INQ_CNTR_LIS_RESPONSE_T_
#define _FUT_INQ_CNTR_LIS_RESPONSE_T_

typedef struct futInqCntrLisResponseTag
{
    dataHeaderT      header;
    futBscInqCntrLisResponseT basic;
} futInqCntrLisResponseT, *pFutInqCntrLisResponseT;

#endif  /* _FUT_INQ_CNTR_LIS_RESPONSE_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_CNTR_LIS_REQUEST_T_
#define _OPT_BSC_INQ_CNTR_LIS_REQUEST_T_

typedef struct optBscInqCntrLisRequestTag
{
    char             prodId          [PROD_ID_LEN];
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} optBscInqCntrLisRequestT, *pOptBscInqCntrLisRequestT;

#endif  /* _OPT_BSC_INQ_CNTR_LIS_REQUEST_T_ */

/******************************************************************************/

#ifndef _OPT_INQ_CNTR_LIS_REQUEST_T_
#define _OPT_INQ_CNTR_LIS_REQUEST_T_

typedef struct optInqCntrLisRequestTag
{
    dataHeaderT      header;
    optBscInqCntrLisRequestT basic;
} optInqCntrLisRequestT, *pOptInqCntrLisRequestT;

#endif  /* _OPT_INQ_CNTR_LIS_REQUEST_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_CNTR_LIS_REC_T_
#define _OPT_BSC_INQ_CNTR_LIS_REC_T_

typedef struct optBscInqCntrLisRecTag
{
    char             cntrClasCod;
    char             cntrExpMthDat   [CNTR_EXP_MTH_DAT_LEN];
    char             cntrExpYrDat    [CNTR_EXP_YR_DAT_LEN];
    char             cntrExerPrc     [CNTR_EXER_PRC_LEN];
    char             cntrVersNo;
    char             cntrStsCod;
    char             lepoInd;
} optBscInqCntrLisRecT, *pOptBscInqCntrLisRecT;

#endif  /* _OPT_BSC_INQ_CNTR_LIS_REC_T_ */

/******************************************************************************/

#ifndef _OPT_BSC_INQ_CNTR_LIS_RESPONSE_T_
#define _OPT_BSC_INQ_CNTR_LIS_RESPONSE_T_

typedef struct optBscInqCntrLisResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    optBscInqCntrLisRecT optBscInqCntrLisRec [OPT_BSC_INQ_CNTR_LIS_REC_MAX];
} optBscInqCntrLisResponseT, *pOptBscInqCntrLisResponseT;

#endif  /* _OPT_BSC_INQ_CNTR_LIS_RESPONSE_T_ */

/******************************************************************************/

#ifndef _OPT_INQ_CNTR_LIS_RESPONSE_T_
#define _OPT_INQ_CNTR_LIS_RESPONSE_T_

typedef struct optInqCntrLisResponseTag
{
    dataHeaderT      header;
    optBscInqCntrLisResponseT basic;
} optInqCntrLisResponseT, *pOptInqCntrLisResponseT;

#endif  /* _OPT_INQ_CNTR_LIS_RESPONSE_T_ */

/******************************************************************************/

#if defined(__cplusplus) || defined(c_plusplus)
} /* close scope of 'extern "C"' declaration which encloses file. */
#endif

#endif /* _INQCNTRLIS_HXX_ */

/******************************************************************************/
/* End of file InqCntrLis.hxx */
/******************************************************************************/
