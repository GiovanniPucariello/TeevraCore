<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration>
    <configHeader schema="DRIV_INQUIRE_EXERCISE_RID " namespaceUri="http://www.fixprotocol.org/FIXML-5-0" transformationType="FIXMLToCStruct"/>
    <predicate mapType="FIXML-BO" messageType="OPTIONS-REQUEST" structName="optInqExerRequestT">
        <mappings fixmlClassName="ReqForPoss">
            <selectors>
                <selector dataType="Int" src="message.value.ReqTyp=2"/>
                <selector dataType="String" src="message.value.Instrmt.OptAt=0" preOperator="AND"/>
                <selector dataType="String" src="message.value.Instrmt.SecTyp=OPT" preOperator="AND"/>
            </selectors>
            <arrayMappings>
                <arrayMapping src="message.value.Undly">
                    <targetObj name="basic.optCntrIdGrp">
                        <map targetDataSize="numeric 2" src="Mat[:Mth]" target="cntrExpMthDat" type="simple"/>
                        <map targetDataSize="alphanumeric 4" src="CFI" target="prodId" type="simple"/>
                        <map targetDataSize="alphanumeric 1" targetValue="0" target="cntrVersNo" type="constant"/>
                        <map targetDataSize="alphanumeric 4" src="Mat[:Yr]" target="cntrExpYrDat" type="simple"/>
                        <map targetDataSize="numeric 6" src="EndPx" target="cntrExerPrc" type="simple"/>
                        <map targetDataSize="alphanumeric 1" target="cntrClasCod" type="switch-case">
                            <switch expr="EncUndSecDesc">
                                <case value="1" targetValue="P"/>
                                <case value="2" targetValue="C"/>
                            </switch>
                        </map>
                    </targetObj>
                </arrayMapping>
            </arrayMappings>
            <map targetDataSize="binary 80" src="message.value.Instrmt.EncSecDesc" target="basic.keyDataCtrlBlk" type="simple"/>
            <map targetDataSize="alphanumeric 7" validationType="m" targetValue="OPT" target="header.prodLine" type="constant"/>
            <map targetDataSize="alphanumeric 1" validationType="o" target="basic.acctTypCodGrp.acctTypCod" type="switch-case">
                <switch expr="message.value.Pty.R">
                    <case value="30" targetValue="A"/>
                    <case value="14" targetValue="G"/>
                    <case value="66" targetValue="M"/>
                    <case value="99" targetValue="P"/>
                </switch>
            </map>
            <map targetDataSize="alphanumeric 5" validationType="m" src="message.value.Pty[R=4].ID" target="basic.membClgIdCod" type="simple"/>
            <map targetDataSize="alphanumeric 5" validationType="m" src="message.value.Pty[R=1].ID" target="basic.membExchIdCod" type="simple"/>
            <map targetDataSize="alphanumeric 4" validationType="m" src="message.value.Pty[R=21].ID" target="header.exchApplId" type="simple"/>
            <map targetDataSize="trdMtchPrc" src="message.value.Undly.Px" target="basic.undrPrc" type="simple"/>
            <map targetDataSize="numeric 3" src="message.value.Instrmt.EncSecDescLen" target="basic.mliCntrDataCtr" type="simple"/>
            <map targetDataSize="alphanumeric 5" validationType="r" targetValue="     " target="header.membExchIdCodOboMs" type="constant"/>
            <map targetDataSize="alphanumeric 1" src="message.value.Txt" target="extension.exerCntrInd" type="simple"/>
            <map targetDataSize="alphanumeric 1" validationType="o" target="basic.acctTypCodGrp.acctTypNo" type="switch-case">
                <switch expr="message.value.Pty.ID">
                    <case value="ACCT_TYP_NO_ONE" targetValue="1"/>
                    <case value="ACCT_TYP_NO_TWO" targetValue="2"/>
                    <case value="ACCT_TYP_NO_MKT_AND_PROP" targetValue="P"/>
                </switch>
            </map>
        </mappings>
    </predicate>
    <predicate mapType="BO-STRUCT" messageType="OPTIONS-REQUEST" structName="optInqExerRequestT">
        <binding>
            <field name="header.exchApplId">
                <structField>header.exchApplId</structField>
            </field>
            <field name="header.prodLine">
                <structField>header.prodLine</structField>
            </field>
            <field name="header.membExchIdCodOboMs">
                <structField>header.membExchIdCodOboMs</structField>
            </field>
            <field name="basic.membClgIdCod">
                <structField>basic.membClgIdCod</structField>
            </field>
            <field name="basic.membExchIdCod">
                <structField>basic.membExchIdCod</structField>
            </field>
            <field name="basic.undrPrc">
                <structField>basic.undrPrc</structField>
            </field>
            <field name="basic.mliCntrDataCtr">
                <structField>basic.mliCntrDataCtr</structField>
            </field>
            <field name="basic.keyDataCtrlBlk">
                <structField>basic.keyDataCtrlBlk</structField>
            </field>
            <field name="basic.acctTypCodGrp.acctTypCod">
                <structField>basic.acctTypCodGrp.acctTypCod</structField>
            </field>
            <field name="basic.acctTypCodGrp.acctTypNo">
                <structField>basic.acctTypCodGrp.acctTypNo</structField>
            </field>
            <field name="basic.optCntrIdGrp{=117}.prodId">
                <structField>basic.optCntrIdGrp{=117}.prodId</structField>
            </field>
            <field name="basic.optCntrIdGrp{=117}.cntrClasCod">
                <structField>basic.optCntrIdGrp{=117}.cntrClasCod</structField>
            </field>
            <field name="basic.optCntrIdGrp{=117}.cntrExpMthDat">
                <structField>basic.optCntrIdGrp{=117}.cntrExpMthDat</structField>
            </field>
            <field name="basic.optCntrIdGrp{=117}.cntrExpYrDat">
                <structField>basic.optCntrIdGrp{=117}.cntrExpYrDat</structField>
            </field>
            <field name="basic.optCntrIdGrp{=117}.cntrExerPrc">
                <structField>basic.optCntrIdGrp{=117}.cntrExerPrc</structField>
            </field>
            <field name="basic.optCntrIdGrp{=117}.cntrVersNo">
                <structField>basic.optCntrIdGrp{=117}.cntrVersNo</structField>
            </field>
            <field name="extension.exerCntrInd">
                <structField>extension.exerCntrInd</structField>
            </field>
        </binding>
    </predicate>
</configuration>
