<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration>
    <configHeader schema="DRIV_SUBSCRIBE_GIVE_UP_TAKE_UP" namespaceUri="http://www.fixprotocol.org/FIXML-5-0" transformationType="FIXMLToCStruct"/>
    <predicate mapType="STRUCT-BO" messageType="OPTIONS-REQUEST" structName="optBscSubGivUpTakUpSubjectT">
        <binding>
            <field name="basic.membId">
                <structField>basic.membId</structField>
            </field>
            <field name="basic.prodId">
                <structField>basic.prodId</structField>
            </field>
            <field name="basic.cntrExpYrDat">
                <structField>basic.cntrExpYrDat</structField>
            </field>
            <field name="basic.cntrExpMthDat">
                <structField>basic.cntrExpMthDat</structField>
            </field>
            <field name="basic.cntrClasCod">
                <structField>basic.cntrClasCod</structField>
            </field>
            <field name="basic.cntrExerPrc">
                <structField>basic.cntrExerPrc</structField>
            </field>
            <field name="basic.cntrVersNo">
                <structField>basic.cntrVersNo</structField>
            </field>
            <field name="basic.givUpTakUpInd">
                <structField>basic.givUpTakUpInd</structField>
            </field>
        </binding>
    </predicate>
    <predicate mapType="BO-FIXML" messageType="OPTIONS-REQUEST" structName="optBscSubGivUpTakUpSubjectT">
        <mappings fixmlClassName="AllocInstrctn">
            <map targetDataType="Int" targetValue="2" target="message.value.Typ" type="constant"/>
            <map targetDataType="String" targetValue="0" target="message.value.TransTyp" type="constant"/>
            <map targetDataType="String" targetValue="1" target="message.value.Instrmt.Evnt.EventTyp " type="constant"/>
            <map targetDataType="String" targetValue="null" target="message.value.Instrmt.SecTyp" type="constant"/>
            <map targetDataSize="numeric 1" validationType="m" targetDataType="String" targetValue="0" src="basic.cntrVersNo" target="message.value.Instrmt.OptAt" type="constant"/>
            <map targetDataSize="numeric 2" validationType="m" targetDataType="Date" src="basic.cntrExpMthDat" target="message.value.Instrmt.MatDt[:Mth]" type="simple"/>
            <map targetDataSize="alphanumeric 4" validationType="m" targetDataType="Date" src="basic.cntrExpYrDat" target="message.value.Instrmt.MatDt[:Yr]" type="simple"/>
            <map targetDataSize="numeric 6" validationType="m" targetDataType="Float" src="basic.cntrExerPrc" target="message.value.Instrmt.StrkPx" type="simple"/>
            <map targetDataSize="alphanumeric 5" validationType="m" targetDataType="String" src="basic.membId" target="message.value.Pty[R=1].ID" type="simple"/>
            <map targetDataSize="alphanumeric 4" validationType="m" targetDataType="String" src="basic.prodId" target="message.value.Instrmt.CFI" type="simple"/>
            <map targetDataSize="alphanumeric 1" validationType="m" targetDataType="Int" target="message.value.Typ" type="switch-case">
                <switch expr="basic.givUpTakUpInd">
                    <case value="G" targetValue="2"/>
                    <case value="T" targetValue="15"/>
                </switch>
            </map>
            <map targetDataSize="alphanumeric 1" validationType="m" targetDataType="String" target="message.value.Instrmt.Evnt.EventTyp" type="switch-case">
                <switch expr="basic.cntrClasCod">
                    <case value="P" targetValue="1"/>
                    <case value="C" targetValue="2"/>
                </switch>
            </map>
        </mappings>
    </predicate>
    <predicate mapType="STRUCT-BO" messageType="FUTURES-REQUEST" structName="futBscSubGivUpTakUpSubjectT">
        <binding>
            <field name="basic.membId">
                <structField>basic.membId</structField>
            </field>
            <field name="basic.prodId">
                <structField>basic.prodId</structField>
            </field>
            <field name="basic.cntrExpYrDat">
                <structField>basic.cntrExpYrDat</structField>
            </field>
            <field name="basic.cntrExpMthDat">
                <structField>basic.cntrExpMthDat</structField>
            </field>
            <field name="basic.subjFill">
                <structField>basic.subjFill</structField>
            </field>
            <field name="basic.givUpTakUpInd">
                <structField>basic.givUpTakUpInd</structField>
            </field>
        </binding>
    </predicate>
    <predicate mapType="BO-FIXML" messageType="FUTURES-REQUEST" structName="futBscSubGivUpTakUpSubjectT">
        <mappings fixmlClassName="AllocInstrctn">
            <map targetDataType="Int" targetValue="2" target="message.value.Typ" type="constant"/>
            <map targetDataType="String" targetValue="0" target="message.value.TransTyp" type="constant"/>
            <map targetDataType="String" targetValue="null" target="message.value.Instrmt.Evnt.EventTyp" type="constant"/>
            <map targetDataType="String" targetValue="null" target="message.value.Instrmt.SecTyp" type="constant"/>
            <map targetDataSize="numeric 2" validationType="m" targetDataType="Date" src="basic.cntrExpMthDat" target="message.value.Instrmt.MatDt[:Mth]" type="simple"/>
            <map targetDataSize="alphanumeric 4" validationType="m" targetDataType="Date" src="basic.cntrExpYrDat" target="message.value.Instrmt.MatDt[:Yr]" type="simple"/>
            <map targetDataSize="alphanumeric 8" validationType="r" targetValue="        " src="basic.subjFill" target="NA" type="constant"/>
            <map targetDataSize="alphanumeric 5" validationType="m" targetDataType="String" src="basic.membId" target="message.value.Pty[R=1].ID" type="simple"/>
            <map targetDataSize="alphanumeric 4" validationType="m" targetDataType="String" src="basic.prodId" target="message.value.Instrmt.CFI" type="simple"/>
            <map targetDataSize="alphanumeric 1" validationType="m" targetDataType="Int" target="message.value.Typ" type="switch-case">
                <switch expr="basic.givUpTakUpInd">
                    <case value="G" targetValue="2"/>
                    <case value="T" targetValue="15"/>
                </switch>
            </map>
        </mappings>
    </predicate>
</configuration>
