//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.09.07 at 08:10:49 PM IST 
//

package com.headstrong.fusion.configGenerator.viewObjects.liffe;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for anonymous complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base=&quot;{http://www.w3.org/2001/XMLSchema}anyType&quot;&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref=&quot;{}formatterConfig&quot;/&gt;
 *         &lt;element ref=&quot;{}binding&quot;/&gt;
 *         &lt;element ref=&quot;{}mappings&quot;/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = { "formatterConfig", "binding", "mappings" })
@XmlRootElement(name = "configuration")
public class Configuration {

	@XmlElement(required = true)
	protected FormatterConfig formatterConfig;
	@XmlElement(required = true)
	protected Binding binding;
	@XmlElement(required = true)
	protected Mappings mappings;

	/**
	 * Gets the value of the formatterConfig property.
	 * 
	 * @return possible object is {@link FormatterConfig }
	 * 
	 */
	public FormatterConfig getFormatterConfig() {
		return formatterConfig;
	}

	/**
	 * Sets the value of the formatterConfig property.
	 * 
	 * @param value
	 *            allowed object is {@link FormatterConfig }
	 * 
	 */
	public void setFormatterConfig(FormatterConfig value) {
		this.formatterConfig = value;
	}

	/**
	 * Gets the value of the binding property.
	 * 
	 * @return possible object is {@link Binding }
	 * 
	 */
	public Binding getBinding() {
		return binding;
	}

	/**
	 * Sets the value of the binding property.
	 * 
	 * @param value
	 *            allowed object is {@link Binding }
	 * 
	 */
	public void setBinding(Binding value) {
		this.binding = value;
	}

	/**
	 * Gets the value of the mappings property.
	 * 
	 * @return possible object is {@link Mappings }
	 * 
	 */
	public Mappings getMappings() {
		return mappings;
	}

	/**
	 * Sets the value of the mappings property.
	 * 
	 * @param value
	 *            allowed object is {@link Mappings }
	 * 
	 */
	public void setMappings(Mappings value) {
		this.mappings = value;
	}

	// public static void main(String[] arg)throws Exception{
	// JAXBContext context = JAXBContext.newInstance(Configuration.class);
	// Marshaller marshaller = context.createMarshaller();
	// marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
	//        
	// //formatterConfig element
	//        
	// Key key= new Key();
	// key.setName("TransTyp");
	// key.setValue("6");
	// key.setParseType("integer");
	//        
	// FormatterKey formatterKey=new FormatterKey();
	// List<Key> keyList=new ArrayList<Key>();
	// keyList.add(key);
	// formatterKey.setKey(keyList);
	//        
	// FormatterConfig formatterConfig=new FormatterConfig();
	// formatterConfig.setFormatterKey(formatterKey);
	// formatterConfig.setSchema("1021");
	// formatterConfig.setClassname("TradeCaptureReportMessageT");
	//        
	// // Set Bindings
	//        
	// Binding binding=new Binding();
	// Field field=new Field();
	// field.setStart("1");
	// field.setEnd("4");
	// field.setName("messageCode");
	// binding.getField().add(field);
	//        
	//        
	// Mappings mappings=new Mappings();
	//        
	//        
	// Configuration configuration=new Configuration();
	// configuration.setBinding(binding);
	// configuration.setMappings(mappings);
	// configuration.setFormatterConfig(formatterConfig);
	// marshaller.marshal(configuration, new
	// FileWriter(".\\src\\configuration.xml"));
	// }

}
