/* Generated by Xgen from: E100.05.02 SIR 82796 on: 2007-06-12 15:43 */
/*******************************************************************************
* 2007 (c) Copyright Eurex (R) Zuerich AG, Eurex (R) Frankfurt AG
********************************************************************************
*
*  FILE NAME:   InqAllFlxCntrTrd.hxx
*
*  DESCRIPTION: Layouts used for
*               Inquire All Flexible Contract Trades
*
*******************************************************************************/

#ifndef _INQALLFLXCNTRTRD_HXX_
#define _INQALLFLXCNTRTRD_HXX_

#if defined(__cplusplus) || defined(c_plusplus)
extern "C" {
#endif

/******************************************************************************/

#include <DRIV_common_structs.hxx>
#include <DRIV_data_types.hxx>

/******************************************************************************/

#define BSC_INQ_ALL_FLX_FUT_TRD_REC_MAX          25
#define BSC_INQ_ALL_FLX_OPT_TRD_REC_MAX          25

/******************************************************************************/

#ifndef _BSC_INQ_ALL_FLX_FUT_TRD_REQUEST_T_
#define _BSC_INQ_ALL_FLX_FUT_TRD_REQUEST_T_

typedef struct bscInqAllFlxFutTrdRequestTag
{
    flxFutCntrIdGrpT flxFutCntrIdGrp;
    char             timMin          [DRIV_TIME_LEN];
    char             timMax          [DRIV_TIME_LEN];
    char             trnDat          [DRIV_DATE_LEN];
    char             trdTyp;
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} bscInqAllFlxFutTrdRequestT, *pBscInqAllFlxFutTrdRequestT;

#endif  /* _BSC_INQ_ALL_FLX_FUT_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _INQ_ALL_FLX_FUT_TRD_REQUEST_T_
#define _INQ_ALL_FLX_FUT_TRD_REQUEST_T_

typedef struct inqAllFlxFutTrdRequestTag
{
    dataHeaderT      header;
    bscInqAllFlxFutTrdRequestT basic;
} inqAllFlxFutTrdRequestT, *pInqAllFlxFutTrdRequestT;

#endif  /* _INQ_ALL_FLX_FUT_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _BSC_INQ_ALL_FLX_FUT_TRD_REC_T_
#define _BSC_INQ_ALL_FLX_FUT_TRD_REC_T_

typedef struct bscInqAllFlxFutTrdRecTag
{
    flxFutCntrIdGrpT flxFutCntrIdGrp;
    char             flxCntrTrnIdNo  [FLX_CNTR_TRN_ID_NO_LEN];
    char             trdMtchPrc      [DRIV_PRICE_LEN];
    char             trdXQty         [DRIV_VOLUME_LEN];
    char             trnDat          [DRIV_DATE_LEN];
    char             trnTim          [DRIV_TIME_LEN];
    char             trdTyp;
    char             currTypCod      [CURR_TYP_COD_LEN];
    char             flxCntrSynProdId [PROD_ID_LEN];
    char             dateLstUpdDat   [DRIV_TIMESTAMP_LEN];
} bscInqAllFlxFutTrdRecT, *pBscInqAllFlxFutTrdRecT;

#endif  /* _BSC_INQ_ALL_FLX_FUT_TRD_REC_T_ */

/******************************************************************************/

#ifndef _BSC_INQ_ALL_FLX_FUT_TRD_RESPONSE_T_
#define _BSC_INQ_ALL_FLX_FUT_TRD_RESPONSE_T_

typedef struct bscInqAllFlxFutTrdResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    bscInqAllFlxFutTrdRecT bscInqAllFlxFutTrdRec [BSC_INQ_ALL_FLX_FUT_TRD_REC_MAX];
} bscInqAllFlxFutTrdResponseT, *pBscInqAllFlxFutTrdResponseT;

#endif  /* _BSC_INQ_ALL_FLX_FUT_TRD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _INQ_ALL_FLX_FUT_TRD_RESPONSE_T_
#define _INQ_ALL_FLX_FUT_TRD_RESPONSE_T_

typedef struct inqAllFlxFutTrdResponseTag
{
    dataHeaderT      header;
    bscInqAllFlxFutTrdResponseT basic;
} inqAllFlxFutTrdResponseT, *pInqAllFlxFutTrdResponseT;

#endif  /* _INQ_ALL_FLX_FUT_TRD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _BSC_INQ_ALL_FLX_OPT_TRD_REQUEST_T_
#define _BSC_INQ_ALL_FLX_OPT_TRD_REQUEST_T_

typedef struct bscInqAllFlxOptTrdRequestTag
{
    flxOptCntrIdGrpT flxOptCntrIdGrp;
    char             timMin          [DRIV_TIME_LEN];
    char             timMax          [DRIV_TIME_LEN];
    char             trnDat          [DRIV_DATE_LEN];
    char             trdTyp;
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
} bscInqAllFlxOptTrdRequestT, *pBscInqAllFlxOptTrdRequestT;

#endif  /* _BSC_INQ_ALL_FLX_OPT_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _INQ_ALL_FLX_OPT_TRD_REQUEST_T_
#define _INQ_ALL_FLX_OPT_TRD_REQUEST_T_

typedef struct inqAllFlxOptTrdRequestTag
{
    dataHeaderT      header;
    bscInqAllFlxOptTrdRequestT basic;
} inqAllFlxOptTrdRequestT, *pInqAllFlxOptTrdRequestT;

#endif  /* _INQ_ALL_FLX_OPT_TRD_REQUEST_T_ */

/******************************************************************************/

#ifndef _BSC_INQ_ALL_FLX_OPT_TRD_REC_T_
#define _BSC_INQ_ALL_FLX_OPT_TRD_REC_T_

typedef struct bscInqAllFlxOptTrdRecTag
{
    flxOptCntrIdGrpT flxOptCntrIdGrp;
    char             flxCntrTrnIdNo  [FLX_CNTR_TRN_ID_NO_LEN];
    char             trdMtchPrc      [DRIV_PRICE_LEN];
    char             trdXQty         [DRIV_VOLUME_LEN];
    char             trnDat          [DRIV_DATE_LEN];
    char             trnTim          [DRIV_TIME_LEN];
    char             trdTyp;
    char             currTypCod      [CURR_TYP_COD_LEN];
    char             flxCntrSynProdId [PROD_ID_LEN];
    char             dateLstUpdDat   [DRIV_TIMESTAMP_LEN];
} bscInqAllFlxOptTrdRecT, *pBscInqAllFlxOptTrdRecT;

#endif  /* _BSC_INQ_ALL_FLX_OPT_TRD_REC_T_ */

/******************************************************************************/

#ifndef _BSC_INQ_ALL_FLX_OPT_TRD_RESPONSE_T_
#define _BSC_INQ_ALL_FLX_OPT_TRD_RESPONSE_T_

typedef struct bscInqAllFlxOptTrdResponseTag
{
    char             keyDataCtrlBlk  [KEY_DATA_CTRL_BLK_LEN];
    char             mliRecCtr       [DRIV_MLI_REC_CTR_LEN];
    bscInqAllFlxOptTrdRecT bscInqAllFlxOptTrdRec [BSC_INQ_ALL_FLX_OPT_TRD_REC_MAX];
} bscInqAllFlxOptTrdResponseT, *pBscInqAllFlxOptTrdResponseT;

#endif  /* _BSC_INQ_ALL_FLX_OPT_TRD_RESPONSE_T_ */

/******************************************************************************/

#ifndef _INQ_ALL_FLX_OPT_TRD_RESPONSE_T_
#define _INQ_ALL_FLX_OPT_TRD_RESPONSE_T_

typedef struct inqAllFlxOptTrdResponseTag
{
    dataHeaderT      header;
    bscInqAllFlxOptTrdResponseT basic;
} inqAllFlxOptTrdResponseT, *pInqAllFlxOptTrdResponseT;

#endif  /* _INQ_ALL_FLX_OPT_TRD_RESPONSE_T_ */

/******************************************************************************/

#if defined(__cplusplus) || defined(c_plusplus)
} /* close scope of 'extern "C"' declaration which encloses file. */
#endif

#endif /* _INQALLFLXCNTRTRD_HXX_ */

/******************************************************************************/
/* End of file InqAllFlxCntrTrd.hxx */
/******************************************************************************/
